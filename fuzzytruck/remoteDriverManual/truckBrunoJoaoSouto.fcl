// Block definition (there may be more than one block per file)
FUNCTION_BLOCK truckBrunoJoaoSouto

// Define input variables
VAR_INPUT
    x : REAL;
    angle : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    output : REAL;
END_VAR

// Fuzzify input variable 'x'
FUZZIFY x
    TERM left        := (0,1) (0.2,1) (0.3,0);
    TERM middleLeft  := TRAPE 0.2 0.3 0.4 0.5;
    TERM center      := TRIAN 0.4 0.5 0.6;
    TERM middleRight := TRAPE 0.5 0.6 0.7 0.8;
    TERM right       := (0.7,0) (0.8,1) (1,1);
END_FUZZIFY

// Fuzzify input variable 'angle'
FUZZIFY angle
    TERM west2      := gauss 360 30;
    TERM west       := gauss   0 30;
    TERM southWest  := gauss  45 30;
    TERM south      := gauss  90 30;
    TERM southEast  := gauss 135 30;
    TERM east       := gauss 180 30;
    TERM north      := gauss 270 30;
END_FUZZIFY

// Defuzzify output variable 'output'
DEFUZZIFY output
    TERM allRight       := (-1,1) (-0.6,1) (-0.5,0);
    TERM right          := TRAPE -0.6 -0.5 -0.4 -0.3;
    TERM softRight      := TRAPE -0.4 -0.3 -0.2 -0.1;
    TERM keepCenter     := TRAPE -0.2 -0.1  0.1  0.2;
    TERM softLeft       := TRAPE  0.1  0.2  0.3  0.4;    
    TERM left           := TRAPE  0.3  0.4  0.5  0.6;
    TERM allLeft        := (0.5,0) (0.6,1) (1,1);

    METHOD : COG; // Use 'Center Of Gravity' defuzzification method
    DEFAULT := 0; // Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

// Use 'min' for 'and' (also implicit use 'max'
// for 'or' to fulfill DeMorgan's Law)
// Use 'min' activation method
// Use 'max' accumulation method // '
RULEBLOCK No1

    AND  : MIN;
    ACT  : MIN;
    ACCU : MAX;

    RULE 1  : IF x IS left AND angle IS north THEN output IS allRight;
    RULE 2  : IF x IS left AND angle IS south THEN output IS allLeft;
    RULE 3  : IF x IS left AND angle IS east THEN output IS allRight;
    RULE 4  : IF x IS left AND angle IS west THEN output IS allLeft;
    RULE 5  : IF x IS left AND angle IS west2 THEN output IS allLeft;

    RULE 6  : IF x IS middleLeft AND angle IS north THEN output IS allRight;
    RULE 7  : IF x IS middleLeft AND angle IS south THEN output IS left;
    RULE 8  : IF x IS middleLeft AND angle IS east THEN output IS right;
    RULE 9  : IF x IS middleLeft AND angle IS west THEN output IS left;
    RULE 10 : IF x IS middleLeft AND angle IS west2 THEN output IS left;
    RULE 11 : IF x IS middleLeft AND angle IS southWest THEN output IS allLeft;
    RULE 12 : IF x IS middleLeft AND angle IS southEast THEN output IS allRight;

    RULE 13 : IF x IS center AND angle IS north THEN output IS allRight;
    RULE 14 : IF x IS center AND angle IS east THEN output IS allRight;
    RULE 15 : IF x IS center AND angle IS west THEN output IS allLeft;
    RULE 16 : IF x IS center AND angle IS west2 THEN output IS allLeft;

    RULE 17 : IF x IS middleRight AND angle IS north THEN output IS allLeft;
    RULE 18 : IF x IS middleRight AND angle IS south THEN output IS right;
    RULE 19 : IF x IS middleRight AND angle IS east THEN output IS right;
    RULE 20 : IF x IS middleRight AND angle IS west THEN output IS left;
    RULE 21 : IF x IS middleRight AND angle IS west2 THEN output IS left;
    RULE 22 : IF x IS middleRight AND angle IS southWest THEN output IS allLeft;
    RULE 23 : IF x IS middleRight AND angle IS southEast THEN output IS allRight;

    RULE 24 : IF x IS right AND angle IS north THEN output IS allLeft;
    RULE 25 : IF x IS right AND angle IS south THEN output IS allRight;
    RULE 26 : IF x IS right AND angle IS east THEN output IS allRight;
    RULE 27 : IF x IS right AND angle IS west THEN output IS allLeft;
    RULE 28 : IF x IS right AND angle IS west2 THEN output IS allLeft;

END_RULEBLOCK

END_FUNCTION_BLOCK