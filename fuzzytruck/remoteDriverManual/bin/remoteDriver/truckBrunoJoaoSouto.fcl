// Block definition (there may be more than one block per file)
FUNCTION_BLOCK truckBrunoJoaoSouto

// Define input variables
VAR_INPUT
    x : REAL;
    y : REAL;
    angle : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    output : REAL;
END_VAR

// Fuzzify input variable 'x'
FUZZIFY x
    TERM left := (0, 1) (0.2,1) (0.3, 0);
    TERM middleLeft := (0.2, 0) (0.3,1) (0.5,1) (0.6, 0);
    TERM middleRight := (0.4, 0) (0.5,1) (0.7,1) (0.8, 0);
    TERM right := (0.7, 0) (0.8,1) (1, 1);
END_FUZZIFY

// Fuzzify input variable 'y'
FUZZIFY y
    TERM far := (0, 1) (0.5, 0);
    TERM middle := (0.25, 0) (0.5,1) (0.75,0);
    TERM close := (0.5, 0) (1,1);
END_FUZZIFY

// Fuzzify input variable 'angle'
FUZZIFY angle
    TERM south := gauss 90 30;
    TERM east := gauss 180 30;
    TERM north := gauss 270 30;
    TERM west := gauss 0 30;
END_FUZZIFY

// Defzzzify output variable 'output'
DEFUZZIFY output
    TERM allright := (-1,1) (-0.3,1) (0.2,0);
    TERM keep := (-0.25,0) (-0.1,1) (0.1,1) (0.25,0);
    TERM allleft := (-0.2,0) (0.3,1) (1,1);
    METHOD : COG; // Use 'Center Of Gravity' defuzzification method
    DEFAULT := 0; // Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

// Use 'min' for 'and' (also implicit use 'max'
// for 'or' to fulfill DeMorgan's Law)
// Use 'min' activation method
// Use 'max' accumulation method
RULEBLOCK No1

    AND  : MIN;
    ACT  : MIN;
    ACCU : MAX;

    RULE 1 : IF x IS left AND angle IS north THEN output IS allright;
    RULE 2 : IF x IS left AND angle IS south THEN output IS allleft;
    RULE 3 : IF x IS left AND angle IS east THEN output IS allright;
    RULE 4 : IF x IS left AND angle IS west THEN output IS allleft;

    RULE 1 : IF x IS middleLeft AND angle IS north THEN output IS allright;
    RULE 2 : IF x IS middleLeft AND angle IS south THEN output IS allleft;
    RULE 3 : IF x IS middleLeft AND angle IS east THEN output IS allright;
    RULE 4 : IF x IS middleLeft AND angle IS west THEN output IS allleft;

    RULE 18 : IF x IS middleRight AND angle IS north THEN output IS allleft;
    RULE 19 : IF x IS middleRight AND angle IS south THEN output IS allright;
    RULE 20 : IF x IS middleRight AND angle IS east THEN output IS allright;
    RULE 21 : IF x IS middleRight AND angle IS west THEN output IS allleft;

    RULE 18 : IF x IS right AND angle IS north THEN output IS allleft;
    RULE 19 : IF x IS right AND angle IS south THEN output IS allright;
    RULE 20 : IF x IS right AND angle IS east THEN output IS allright;
    RULE 21 : IF x IS right AND angle IS west THEN output IS allleft;

    // RULE 22 : IF y IS far AND x IS middleLeft AND angle IS west THEN output IS allleft;
    // RULE 23 : IF y IS far AND x IS middleRight AND angle IS east THEN output IS allright;

    // RULE 24 : IF y IS middle AND x IS center AND angle IS west THEN output IS allleft;
    // RULE 25 : IF y IS middle AND x IS center AND angle IS east THEN output IS allright;

    // RULE 26 : IF y IS close AND x IS middleLeft AND angle IS west THEN output IS allleft;
    // RULE 27 : IF y IS close AND x IS middleRight AND angle IS east THEN output IS allright;

    // RULE 18 : IF y IS middle AND x IS center AND angle IS south THEN output IS allleft;
    // RULE 18 : IF y IS middle AND x IS center AND angle IS south THEN output IS allright;

END_RULEBLOCK

END_FUNCTION_BLOCK